import type { IdentityMetadata } from '../types/identity.js';
import type { AuthorizationServerMetadata } from '../types/server.js';
import type { Session } from '../types/token.js';
export interface AuthorizeOptions {
    metadata: AuthorizationServerMetadata;
    identity?: IdentityMetadata;
    scope: string;
}
/**
 * Create authentication URL for authorization
 * @param options
 * @returns URL to redirect the user for authorization
 */
export declare const createAuthorizationUrl: ({ metadata, identity, scope, }: AuthorizeOptions) => Promise<URL>;
/**
 * Finalize authorization
 * @param params Search params
 * @returns Session object, which you can use to instantiate user agents
 */
export declare const finalizeAuthorization: (params: URLSearchParams) => Promise<Session>;
